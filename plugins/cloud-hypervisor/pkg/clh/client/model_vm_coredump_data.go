/*
Cloud Hypervisor API

Local HTTP based API for managing and inspecting a cloud-hypervisor virtual machine.

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VmCoredumpData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmCoredumpData{}

// VmCoredumpData struct for VmCoredumpData
type VmCoredumpData struct {
	DestinationUrl *string `json:"destination_url,omitempty"`
}

// NewVmCoredumpData instantiates a new VmCoredumpData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmCoredumpData() *VmCoredumpData {
	this := VmCoredumpData{}
	return &this
}

// NewVmCoredumpDataWithDefaults instantiates a new VmCoredumpData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmCoredumpDataWithDefaults() *VmCoredumpData {
	this := VmCoredumpData{}
	return &this
}

// GetDestinationUrl returns the DestinationUrl field value if set, zero value otherwise.
func (o *VmCoredumpData) GetDestinationUrl() string {
	if o == nil || IsNil(o.DestinationUrl) {
		var ret string
		return ret
	}
	return *o.DestinationUrl
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmCoredumpData) GetDestinationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationUrl) {
		return nil, false
	}
	return o.DestinationUrl, true
}

// HasDestinationUrl returns a boolean if a field has been set.
func (o *VmCoredumpData) HasDestinationUrl() bool {
	if o != nil && !IsNil(o.DestinationUrl) {
		return true
	}

	return false
}

// SetDestinationUrl gets a reference to the given string and assigns it to the DestinationUrl field.
func (o *VmCoredumpData) SetDestinationUrl(v string) {
	o.DestinationUrl = &v
}

func (o VmCoredumpData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmCoredumpData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationUrl) {
		toSerialize["destination_url"] = o.DestinationUrl
	}
	return toSerialize, nil
}

type NullableVmCoredumpData struct {
	value *VmCoredumpData
	isSet bool
}

func (v NullableVmCoredumpData) Get() *VmCoredumpData {
	return v.value
}

func (v *NullableVmCoredumpData) Set(val *VmCoredumpData) {
	v.value = val
	v.isSet = true
}

func (v NullableVmCoredumpData) IsSet() bool {
	return v.isSet
}

func (v *NullableVmCoredumpData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmCoredumpData(val *VmCoredumpData) *NullableVmCoredumpData {
	return &NullableVmCoredumpData{value: val, isSet: true}
}

func (v NullableVmCoredumpData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmCoredumpData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


