package container_test

import (
	"context"
	"encoding/json"
	"fmt"
	"testing"

	"buf.build/gen/go/cedana/cedana/protocolbuffers/go/daemon"
	"buf.build/gen/go/cedana/cedana/protocolbuffers/go/plugins/k8s"
	"github.com/cedana/cedana/plugins/k8s/internal/container"
	"github.com/opencontainers/runtime-spec/specs-go"
	"github.com/spf13/afero"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

type containerConfig struct {
	id     string
	spec   string
	config string
}

func TestQuery(t *testing.T) {
	// Create a mock filesystem
	fs := afero.NewOsFs()

	spec1 := `{"id":"8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b","init_process_pid":4589,"init_process_start":6387,"created":"2025-01-28T22:08:28.279619795Z","config":{"no_pivot_root":false,"parent_death_signal":0,"rootfs":"./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b/rootfs","umask":null,"readonlyfs":false,"rootPropagation":0,"mounts":[{"source":"proc","destination":"/proc","device":"proc","flags":14,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"tmpfs","destination":"/dev","device":"tmpfs","flags":16777218,"propagation_flags":null,"data":"mode=755,size=65536k","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"devpts","destination":"/dev/pts","device":"devpts","flags":10,"propagation_flags":null,"data":"newinstance,ptmxmode=0666,mode=0620,gid=5","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"mqueue","destination":"/dev/mqueue","device":"mqueue","flags":14,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"sysfs","destination":"/sys","device":"sysfs","flags":15,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"cgroup","destination":"/sys/fs/cgroup","device":"cgroup","flags":2097167,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/kubelet/pods/37a90749-994d-484a-9318-d3bf6230197e/etc-hosts","destination":"/etc/hosts","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/kubelet/pods/37a90749-994d-484a-9318-d3bf6230197e/containers/count-script/f58b7e99","destination":"/dev/termination-log","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc/hostname","destination":"/etc/hostname","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc/resolv.conf","destination":"/etc/resolv.conf","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"./mock/run/containerd/io.containerd.grpc.v1.cri/sandboxes/fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc/shm","destination":"/dev/shm","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/kubelet/pods/37a90749-994d-484a-9318-d3bf6230197e/volumes/kubernetes.io~projected/kube-api-access-km6m2","destination":"/var/run/secrets/kubernetes.io/serviceaccount","device":"bind","flags":20481,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null}],"devices":[{"type":99,"major":1,"minor":3,"permissions":"rwm","allow":true,"path":"/dev/null","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":8,"permissions":"rwm","allow":true,"path":"/dev/random","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":7,"permissions":"rwm","allow":true,"path":"/dev/full","file_mode":438,"uid":0,"gid":0},{"type":99,"major":5,"minor":0,"permissions":"rwm","allow":true,"path":"/dev/tty","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":5,"permissions":"rwm","allow":true,"path":"/dev/zero","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":9,"permissions":"rwm","allow":true,"path":"/dev/urandom","file_mode":438,"uid":0,"gid":0}],"mount_label":"","hostname":"","namespaces":[{"type":"NEWPID","path":""},{"type":"NEWIPC","path":"/proc/3478/ns/ipc"},{"type":"NEWUTS","path":"/proc/3478/ns/uts"},{"type":"NEWNS","path":""},{"type":"NEWNET","path":"/proc/3478/ns/net"},{"type":"NEWCGROUP","path":""}],"capabilities":{"Bounding":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"Effective":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"Inheritable":null,"Permitted":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"Ambient":null},"networks":null,"routes":null,"cgroups":{"name":"8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b","parent":"kubepods-pod37a90749_994d_484a_9318_d3bf6230197e.slice","path":"","scope_prefix":"cri-containerd","devices":[{"type":97,"major":-1,"minor":-1,"permissions":"rwm","allow":false},{"type":99,"major":-1,"minor":-1,"permissions":"m","allow":true},{"type":98,"major":-1,"minor":-1,"permissions":"m","allow":true},{"type":99,"major":1,"minor":3,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":8,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":7,"permissions":"rwm","allow":true},{"type":99,"major":5,"minor":0,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":5,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":9,"permissions":"rwm","allow":true},{"type":99,"major":136,"minor":-1,"permissions":"rwm","allow":true},{"type":99,"major":5,"minor":2,"permissions":"rwm","allow":true},{"type":99,"major":10,"minor":200,"permissions":"rwm","allow":true}],"memory":134217728,"memory_reservation":0,"memory_swap":134217728,"cpu_shares":102,"cpu_quota":10000,"cpu_period":100000,"cpu_rt_quota":0,"cpu_rt_period":0,"cpuset_cpus":"","cpuset_mems":"","pids_limit":0,"blkio_weight":0,"blkio_leaf_weight":0,"blkio_weight_device":null,"blkio_throttle_read_bps_device":null,"blkio_throttle_write_bps_device":null,"blkio_throttle_read_iops_device":null,"blkio_throttle_write_iops_device":null,"freezer":"","hugetlb_limit":null,"oom_kill_disable":false,"memory_swappiness":null,"net_prio_ifpriomap":null,"net_cls_classid_u":0,"rdma":null,"cpu_weight":4,"unified":{"memory.oom.group":"1","memory.swap.max":"0"},"Systemd":true,"Rootless":false},"oom_score_adj":-997,"uid_mappings":null,"gid_mappings":null,"mask_paths":["/proc/asound","/proc/acpi","/proc/kcore","/proc/keys","/proc/latency_stats","/proc/timer_list","/proc/timer_stats","/proc/sched_debug","/proc/scsi","/sys/firmware","/sys/devices/virtual/powercap"],"readonly_paths":["/proc/bus","/proc/fs","/proc/irq","/proc/sys","/proc/sysrq-trigger"],"sysctl":null,"seccomp":null,"Hooks":{"createContainer":null,"createRuntime":null,"poststart":null,"poststop":null,"prestart":null,"startContainer":null},"version":"1.0.2-dev","labels":["io.kubernetes.cri.container-name=count-script","io.kubernetes.cri.container-type=container","io.kubernetes.cri.image-name=docker.io/library/busybox:latest","io.kubernetes.cri.sandbox-id=fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc","io.kubernetes.cri.sandbox-name=count-script-daemonset-fbqr9","io.kubernetes.cri.sandbox-namespace=default","io.kubernetes.cri.sandbox-uid=37a90749-994d-484a-9318-d3bf6230197e","bundle=./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b"],"no_new_keyring":false},"rootless":false,"cgroup_paths":{"":"/sys/fs/cgroup/kubepods.slice/kubepods-pod37a90749_994d_484a_9318_d3bf6230197e.slice/cri-containerd-8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b.scope"},"namespace_paths":{"NEWCGROUP":"/proc/4589/ns/cgroup","NEWIPC":"/proc/4589/ns/ipc","NEWNET":"/proc/4589/ns/net","NEWNS":"/proc/4589/ns/mnt","NEWPID":"/proc/4589/ns/pid","NEWUSER":"/proc/4589/ns/user","NEWUTS":"/proc/4589/ns/uts"},"external_descriptors":["/dev/null","pipe:[30355]","pipe:[30356]"],"intel_rdt_path":""}`
	specConfig1 := `{"ociVersion":"1.1.0","process":{"user":{"uid":0,"gid":0,"additionalGids":[0,10]},"args":["/bin/sh","-c","i=0;\nwhile true; do\n  echo \"Node: pop-os, Count: \";\n  i=1;\n  sleep 1;\ndone;\n"],"env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","HOSTNAME=count-script-daemonset-fbqr9","KUBERNETES_SERVICE_HOST=34.118.224.1","KUBERNETES_SERVICE_PORT=443","KUBERNETES_SERVICE_PORT_HTTPS=443","KUBERNETES_PORT=tcp://34.118.224.1:443","KUBERNETES_PORT_443_TCP=tcp://34.118.224.1:443","KUBERNETES_PORT_443_TCP_PROTO=tcp","KUBERNETES_PORT_443_TCP_PORT=443","KUBERNETES_PORT_443_TCP_ADDR=34.118.224.1"],"cwd":"/","capabilities":{"bounding":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"effective":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"permitted":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"]},"apparmorProfile":"cri-containerd.apparmor.d","oomScoreAdj":-997},"root":{"path":"rootfs"},"mounts":[{"destination":"/proc","type":"proc","source":"proc","options":["nosuid","noexec","nodev"]},{"destination":"/dev","type":"tmpfs","source":"tmpfs","options":["nosuid","strictatime","mode=755","size=65536k"]},{"destination":"/dev/pts","type":"devpts","source":"devpts","options":["nosuid","noexec","newinstance","ptmxmode=0666","mode=0620","gid=5"]},{"destination":"/dev/mqueue","type":"mqueue","source":"mqueue","options":["nosuid","noexec","nodev"]},{"destination":"/sys","type":"sysfs","source":"sysfs","options":["nosuid","noexec","nodev","ro"]},{"destination":"/sys/fs/cgroup","type":"cgroup","source":"cgroup","options":["nosuid","noexec","nodev","relatime","ro"]},{"destination":"/etc/hosts","type":"bind","source":"/var/lib/kubelet/pods/37a90749-994d-484a-9318-d3bf6230197e/etc-hosts","options":["rbind","rprivate","rw"]},{"destination":"/dev/termination-log","type":"bind","source":"/var/lib/kubelet/pods/37a90749-994d-484a-9318-d3bf6230197e/containers/count-script/f58b7e99","options":["rbind","rprivate","rw"]},{"destination":"/etc/hostname","type":"bind","source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc/hostname","options":["rbind","rprivate","rw"]},{"destination":"/etc/resolv.conf","type":"bind","source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc/resolv.conf","options":["rbind","rprivate","rw"]},{"destination":"/dev/shm","type":"bind","source":"./mock/run/containerd/io.containerd.grpc.v1.cri/sandboxes/fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc/shm","options":["rbind","rprivate","rw"]},{"destination":"/var/run/secrets/kubernetes.io/serviceaccount","type":"bind","source":"/var/lib/kubelet/pods/37a90749-994d-484a-9318-d3bf6230197e/volumes/kubernetes.io~projected/kube-api-access-km6m2","options":["rbind","rprivate","ro"]}],"annotations":{"io.kubernetes.cri.container-name":"count-script","io.kubernetes.cri.container-type":"container","io.kubernetes.cri.image-name":"docker.io/library/busybox:latest","io.kubernetes.cri.sandbox-id":"fa7b70c104321e6e62d7ccf482eae95f317062eaaa1c4e56effcc32139f4a3cc","io.kubernetes.cri.sandbox-name":"count-script-daemonset-fbqr9","io.kubernetes.cri.sandbox-namespace":"default","io.kubernetes.cri.sandbox-uid":"37a90749-994d-484a-9318-d3bf6230197e"},"linux":{"resources":{"devices":[{"allow":false,"access":"rwm"}],"memory":{"limit":134217728,"swap":134217728},"cpu":{"shares":102,"quota":10000,"period":100000},"unified":{"memory.oom.group":"1","memory.swap.max":"0"}},"cgroupsPath":"kubepods-pod37a90749_994d_484a_9318_d3bf6230197e.slice:cri-containerd:8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b","namespaces":[{"type":"pid"},{"type":"ipc","path":"/proc/3478/ns/ipc"},{"type":"uts","path":"/proc/3478/ns/uts"},{"type":"mount"},{"type":"network","path":"/proc/3478/ns/net"},{"type":"cgroup"}],"maskedPaths":["/proc/asound","/proc/acpi","/proc/kcore","/proc/keys","/proc/latency_stats","/proc/timer_list","/proc/timer_stats","/proc/sched_debug","/proc/scsi","/sys/firmware","/sys/devices/virtual/powercap"],"readonlyPaths":["/proc/bus","/proc/fs","/proc/irq","/proc/sys","/proc/sysrq-trigger"]}}`
	spec2 := `{"id":"e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2","init_process_pid":135699,"init_process_start":2871485,"created":"2025-01-29T06:05:59.277884553Z","config":{"no_pivot_root":false,"parent_death_signal":0,"rootfs":"./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2/rootfs","umask":null,"readonlyfs":false,"rootPropagation":0,"mounts":[{"source":"proc","destination":"/proc","device":"proc","flags":14,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"tmpfs","destination":"/dev","device":"tmpfs","flags":16777218,"propagation_flags":null,"data":"mode=755,size=65536k","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"devpts","destination":"/dev/pts","device":"devpts","flags":10,"propagation_flags":null,"data":"newinstance,ptmxmode=0666,mode=0620,gid=5","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"mqueue","destination":"/dev/mqueue","device":"mqueue","flags":14,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"sysfs","destination":"/sys","device":"sysfs","flags":15,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"cgroup","destination":"/sys/fs/cgroup","device":"cgroup","flags":2097167,"propagation_flags":null,"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/kubelet/pods/31a3e1ce-8cea-4c28-b1d9-eac70b56557a/etc-hosts","destination":"/etc/hosts","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/kubelet/pods/31a3e1ce-8cea-4c28-b1d9-eac70b56557a/containers/count-script/20219078","destination":"/dev/termination-log","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae/hostname","destination":"/etc/hostname","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae/resolv.conf","destination":"/etc/resolv.conf","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"./mock/run/containerd/io.containerd.grpc.v1.cri/sandboxes/ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae/shm","destination":"/dev/shm","device":"bind","flags":20480,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null},{"source":"/var/lib/kubelet/pods/31a3e1ce-8cea-4c28-b1d9-eac70b56557a/volumes/kubernetes.io~projected/kube-api-access-5dgrb","destination":"/var/run/secrets/kubernetes.io/serviceaccount","device":"bind","flags":20481,"propagation_flags":[278528],"data":"","relabel":"","rec_attr":null,"extensions":0,"premount_cmds":null,"postmount_cmds":null}],"devices":[{"type":99,"major":1,"minor":3,"permissions":"rwm","allow":true,"path":"/dev/null","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":8,"permissions":"rwm","allow":true,"path":"/dev/random","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":7,"permissions":"rwm","allow":true,"path":"/dev/full","file_mode":438,"uid":0,"gid":0},{"type":99,"major":5,"minor":0,"permissions":"rwm","allow":true,"path":"/dev/tty","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":5,"permissions":"rwm","allow":true,"path":"/dev/zero","file_mode":438,"uid":0,"gid":0},{"type":99,"major":1,"minor":9,"permissions":"rwm","allow":true,"path":"/dev/urandom","file_mode":438,"uid":0,"gid":0}],"mount_label":"","hostname":"","namespaces":[{"type":"NEWPID","path":""},{"type":"NEWIPC","path":"/proc/135667/ns/ipc"},{"type":"NEWUTS","path":"/proc/135667/ns/uts"},{"type":"NEWNS","path":""},{"type":"NEWNET","path":"/proc/135667/ns/net"},{"type":"NEWCGROUP","path":""}],"capabilities":{"Bounding":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"Effective":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"Inheritable":null,"Permitted":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"Ambient":null},"networks":null,"routes":null,"cgroups":{"name":"e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2","parent":"kubepods-pod31a3e1ce_8cea_4c28_b1d9_eac70b56557a.slice","path":"","scope_prefix":"cri-containerd","devices":[{"type":97,"major":-1,"minor":-1,"permissions":"rwm","allow":false},{"type":99,"major":-1,"minor":-1,"permissions":"m","allow":true},{"type":98,"major":-1,"minor":-1,"permissions":"m","allow":true},{"type":99,"major":1,"minor":3,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":8,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":7,"permissions":"rwm","allow":true},{"type":99,"major":5,"minor":0,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":5,"permissions":"rwm","allow":true},{"type":99,"major":1,"minor":9,"permissions":"rwm","allow":true},{"type":99,"major":136,"minor":-1,"permissions":"rwm","allow":true},{"type":99,"major":5,"minor":2,"permissions":"rwm","allow":true},{"type":99,"major":10,"minor":200,"permissions":"rwm","allow":true}],"memory":134217728,"memory_reservation":0,"memory_swap":134217728,"cpu_shares":102,"cpu_quota":10000,"cpu_period":100000,"cpu_rt_quota":0,"cpu_rt_period":0,"cpuset_cpus":"","cpuset_mems":"","pids_limit":0,"blkio_weight":0,"blkio_leaf_weight":0,"blkio_weight_device":null,"blkio_throttle_read_bps_device":null,"blkio_throttle_write_bps_device":null,"blkio_throttle_read_iops_device":null,"blkio_throttle_write_iops_device":null,"freezer":"","hugetlb_limit":null,"oom_kill_disable":false,"memory_swappiness":null,"net_prio_ifpriomap":null,"net_cls_classid_u":0,"rdma":null,"cpu_weight":4,"unified":{"memory.oom.group":"1","memory.swap.max":"0"},"Systemd":true,"Rootless":false},"oom_score_adj":-997,"uid_mappings":null,"gid_mappings":null,"mask_paths":["/proc/asound","/proc/acpi","/proc/kcore","/proc/keys","/proc/latency_stats","/proc/timer_list","/proc/timer_stats","/proc/sched_debug","/proc/scsi","/sys/firmware","/sys/devices/virtual/powercap"],"readonly_paths":["/proc/bus","/proc/fs","/proc/irq","/proc/sys","/proc/sysrq-trigger"],"sysctl":null,"seccomp":null,"Hooks":{"createContainer":null,"createRuntime":null,"poststart":null,"poststop":null,"prestart":null,"startContainer":null},"version":"1.0.2-dev","labels":["io.kubernetes.cri.sandbox-name=count-script-daemonset2-v426b","io.kubernetes.cri.sandbox-namespace=default","io.kubernetes.cri.sandbox-uid=31a3e1ce-8cea-4c28-b1d9-eac70b56557a","io.kubernetes.cri.container-name=count-script","io.kubernetes.cri.container-type=container","io.kubernetes.cri.image-name=docker.io/library/busybox:latest","io.kubernetes.cri.sandbox-id=ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae","bundle=./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2"],"no_new_keyring":false},"rootless":false,"cgroup_paths":{"":"/sys/fs/cgroup/kubepods.slice/kubepods-pod31a3e1ce_8cea_4c28_b1d9_eac70b56557a.slice/cri-containerd-e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2.scope"},"namespace_paths":{"NEWCGROUP":"/proc/135699/ns/cgroup","NEWIPC":"/proc/135699/ns/ipc","NEWNET":"/proc/135699/ns/net","NEWNS":"/proc/135699/ns/mnt","NEWPID":"/proc/135699/ns/pid","NEWUSER":"/proc/135699/ns/user","NEWUTS":"/proc/135699/ns/uts"},"external_descriptors":["/dev/null","pipe:[694052]","pipe:[694053]"],"intel_rdt_path":""}`
	specConfig2 := `{"ociVersion":"1.1.0","process":{"user":{"uid":0,"gid":0,"additionalGids":[0,10]},"args":["/bin/sh","-c","i=0;\nwhile true; do\n  echo \"Node: pop-os, Count: \";\n  i=1;\n  sleep 1;\ndone;\n"],"env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","HOSTNAME=count-script-daemonset2-v426b","KUBERNETES_PORT_443_TCP_PROTO=tcp","KUBERNETES_PORT_443_TCP_PORT=443","KUBERNETES_PORT_443_TCP_ADDR=34.118.224.1","KUBERNETES_SERVICE_HOST=34.118.224.1","KUBERNETES_SERVICE_PORT=443","KUBERNETES_SERVICE_PORT_HTTPS=443","KUBERNETES_PORT=tcp://34.118.224.1:443","KUBERNETES_PORT_443_TCP=tcp://34.118.224.1:443"],"cwd":"/","capabilities":{"bounding":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"effective":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"],"permitted":["CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_FSETID","CAP_FOWNER","CAP_MKNOD","CAP_NET_RAW","CAP_SETGID","CAP_SETUID","CAP_SETFCAP","CAP_SETPCAP","CAP_NET_BIND_SERVICE","CAP_SYS_CHROOT","CAP_KILL","CAP_AUDIT_WRITE"]},"apparmorProfile":"cri-containerd.apparmor.d","oomScoreAdj":-997},"root":{"path":"rootfs"},"mounts":[{"destination":"/proc","type":"proc","source":"proc","options":["nosuid","noexec","nodev"]},{"destination":"/dev","type":"tmpfs","source":"tmpfs","options":["nosuid","strictatime","mode=755","size=65536k"]},{"destination":"/dev/pts","type":"devpts","source":"devpts","options":["nosuid","noexec","newinstance","ptmxmode=0666","mode=0620","gid=5"]},{"destination":"/dev/mqueue","type":"mqueue","source":"mqueue","options":["nosuid","noexec","nodev"]},{"destination":"/sys","type":"sysfs","source":"sysfs","options":["nosuid","noexec","nodev","ro"]},{"destination":"/sys/fs/cgroup","type":"cgroup","source":"cgroup","options":["nosuid","noexec","nodev","relatime","ro"]},{"destination":"/etc/hosts","type":"bind","source":"/var/lib/kubelet/pods/31a3e1ce-8cea-4c28-b1d9-eac70b56557a/etc-hosts","options":["rbind","rprivate","rw"]},{"destination":"/dev/termination-log","type":"bind","source":"/var/lib/kubelet/pods/31a3e1ce-8cea-4c28-b1d9-eac70b56557a/containers/count-script/20219078","options":["rbind","rprivate","rw"]},{"destination":"/etc/hostname","type":"bind","source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae/hostname","options":["rbind","rprivate","rw"]},{"destination":"/etc/resolv.conf","type":"bind","source":"/var/lib/containerd/io.containerd.grpc.v1.cri/sandboxes/ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae/resolv.conf","options":["rbind","rprivate","rw"]},{"destination":"/dev/shm","type":"bind","source":"./mock/run/containerd/io.containerd.grpc.v1.cri/sandboxes/ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae/shm","options":["rbind","rprivate","rw"]},{"destination":"/var/run/secrets/kubernetes.io/serviceaccount","type":"bind","source":"/var/lib/kubelet/pods/31a3e1ce-8cea-4c28-b1d9-eac70b56557a/volumes/kubernetes.io~projected/kube-api-access-5dgrb","options":["rbind","rprivate","ro"]}],"annotations":{"io.kubernetes.cri.container-name":"count-script","io.kubernetes.cri.container-type":"container","io.kubernetes.cri.image-name":"docker.io/library/busybox:latest","io.kubernetes.cri.sandbox-id":"ef9db19876542affb8d0d30fc1976393f339a6a7e73ea110a423f934dbff8fae","io.kubernetes.cri.sandbox-name":"count-script-daemonset2-v426b","io.kubernetes.cri.sandbox-namespace":"default","io.kubernetes.cri.sandbox-uid":"31a3e1ce-8cea-4c28-b1d9-eac70b56557a"},"linux":{"resources":{"devices":[{"allow":false,"access":"rwm"}],"memory":{"limit":134217728,"swap":134217728},"cpu":{"shares":102,"quota":10000,"period":100000},"unified":{"memory.oom.group":"1","memory.swap.max":"0"}},"cgroupsPath":"kubepods-pod31a3e1ce_8cea_4c28_b1d9_eac70b56557a.slice:cri-containerd:e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2","namespaces":[{"type":"pid"},{"type":"ipc","path":"/proc/135667/ns/ipc"},{"type":"uts","path":"/proc/135667/ns/uts"},{"type":"mount"},{"type":"network","path":"/proc/135667/ns/net"},{"type":"cgroup"}],"maskedPaths":["/proc/asound","/proc/acpi","/proc/kcore","/proc/keys","/proc/latency_stats","/proc/timer_list","/proc/timer_stats","/proc/sched_debug","/proc/scsi","/sys/firmware","/sys/devices/virtual/powercap"],"readonlyPaths":["/proc/bus","/proc/fs","/proc/irq","/proc/sys","/proc/sysrq-trigger"]}}`

	containers := []containerConfig{
		{
			id:     "8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b",
			spec:   spec1,
			config: specConfig1,
		},
		{
			id:     "e3fc410eec209dd9dcfcc330bbab305d6eb00de626b62609cb320457af60b7e2",
			spec:   spec2,
			config: specConfig2,
		},
	}

	for _, c := range containers {
		var spec specs.Spec
		var config specs.Spec

		json.Unmarshal([]byte(c.spec), &spec)
		json.Unmarshal([]byte(c.config), &config)

		err := fs.MkdirAll(fmt.Sprintf("./mock/root/%s", c.id), 0755)
		if err != nil {
			t.Fatalf("Failed to create directory: %v", err)
		}

		err = fs.MkdirAll(fmt.Sprintf("./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/%s", c.id), 0755)
		if err != nil {
			t.Fatalf("Failed to create directory: %v", err)
		}

		err = afero.WriteFile(fs, fmt.Sprintf("./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/%s/config.json", c.id), []byte(c.config), 0644)
		if err != nil {
			t.Fatalf("Failed to write file: %v", err)
		}

		err = afero.WriteFile(fs, fmt.Sprintf("./mock/root/%s/state.json", c.id), []byte(c.spec), 0644)
		if err != nil {
			t.Fatalf("Failed to write file: %v", err)
		}
	}

	// Create the mock query handler with the mock filesystem
	handler := &container.DefaultQueryHandler{
		fs,
	}

	// Define the request
	req := &daemon.QueryReq{
		K8S: &k8s.QueryReq{
			Root:           "./mock/root",
			Namespace:      "default",
			ContainerNames: []string{"count-script"},
			SandboxNames:   []string{"count-script-daemonset-fbqr9"},
		},
	}

	resp, err := handler.Query(context.Background(), req)

	require.NoError(t, err, "Expected no error from Query function")
	assert.NotNil(t, resp, "Response should not be nil")

	require.NotNil(t, resp.K8S, "K8S response should not be nil")
	assert.Len(t, resp.K8S.Containers, 1, "Expected 1 container")

	container1 := resp.K8S.Containers[0]
	assert.Equal(t, "8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b", container1.Runc.ID, "Unexpected runc ID for container")
	assert.Equal(t, "./mock/run/containerd/io.containerd.runtime.v2.task/k8s.io/8100ca152e8a65cf7c87b11468ff98af3939857da512219b23e64af420f0435b", container1.Runc.Bundle, "Unexpected bundle for container")

	t.Cleanup(func() {
		err := fs.RemoveAll("./mock")
		if err != nil {
			t.Errorf("Failed to clean up test directory: %v", err)
		}
	})
}
