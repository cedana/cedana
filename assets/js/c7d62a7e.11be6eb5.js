"use strict";(self.webpackChunkcedana_docs=self.webpackChunkcedana_docs||[]).push([[618],{4698:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(5893),a=t(1151);const o={sidebar_position:1},s="Checkpointing Service API",r={id:"setup/checkpointing-service-api",title:"Checkpointing Service API",description:"Getting started with checkpointing, migrating and restoring containers and pods in Kubernetes.",source:"@site/docs/setup/checkpointing-service-api.md",sourceDirName:"setup",slug:"/setup/checkpointing-service-api",permalink:"/setup/checkpointing-service-api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",previous:{title:"API Reference & Guides",permalink:"/category/api-reference--guides"},next:{title:"Sandbox and Demo Environment",permalink:"/demo"}},c={},d=[{value:"Authentication",id:"authentication",level:2},{value:"Bootstrapping",id:"bootstrapping",level:2},{value:"Checkpoint/Restore",id:"checkpointrestore",level:2},{value:"Manual Checkpoint &amp; Restore",id:"manual-checkpoint--restore",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"checkpointing-service-api",children:"Checkpointing Service API"}),"\n",(0,i.jsx)(n.p,{children:"Getting started with checkpointing, migrating and restoring containers and pods in Kubernetes."}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"You should have been given registration and cluster info from someone at Cedana. Using it, first generate a JWT:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -vv -X POST -H 'Content-Type: application/json'  \\\n                   -d '{\"password\": \"${PASSWD}\"}' \\\n                   http://cedana-url:1325/registration/${OWNER_UUID}/jwt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"bootstrapping",children:"Bootstrapping"}),"\n",(0,i.jsx)(n.p,{children:"To bootstrap your cluster with cedana:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'  curl -X POST http://url:port/kubernetes/attach \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "key1": "value1",\n    "key2": "value2"\n  }\' \\\n  -F "file=@/path/to/your/kubeconfig"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This installs cedana on all pods in the cluster, unless specified with the key/value pairs (which are name",":pod"," kv pairs)."]}),"\n",(0,i.jsx)(n.h2,{id:"checkpointrestore",children:"Checkpoint/Restore"}),"\n",(0,i.jsx)(n.p,{children:"With Cedana, you can checkpoint a container, a set of containers or an entire pod - and then restore into a container or into an existing pod."}),"\n",(0,i.jsxs)(n.p,{children:["To perform any cedana operation against pods or containers in the cluster, you can apply a ",(0,i.jsx)(n.code,{children:"customResourceDefinition"}),", the schema of which is shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.13.0\n  name: cedanas.core.cedana.ai\nspec:\n  group: core.cedana.ai\n  names:\n    kind: Cedana\n    listKind: CedanaList\n    plural: cedanas\n    singular: cedana\n  scope: Namespaced\n  versions:\n  - name: v1\n    schema:\n      openAPIV3Schema:\n        description: Cedana is the Schema for the cedanas API\n        properties:\n          apiVersion:\n            description: 'APIVersion defines the versioned schema of this representation\n              of an object. Servers should convert recognized schemas to the latest\n              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n            type: string\n          kind:\n            description: 'Kind is a string value representing the REST resource this\n              object represents. Servers may infer this from the endpoint the client\n              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n            type: string\n          metadata:\n            type: object\n          spec:\n            description: CedanaSpec defines the desired state of Cedana\n            properties:\n              containerName:\n                type: string\n              method:\n                enum:\n                - Checkpoint\n                - Restore\n                - Pending\n                - Failed\n                - Done\n                type: string\n              sandboxName:\n                type: string\n            type: object\n          status:\n            description: CedanaStatus defines the observed state of Cedana\n            properties:\n              bundlePath:\n                type: string\n              checkpointDone:\n                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state\n                  of cluster Important: Run \"make\" to regenerate code after modifying\n                  this file'\n                type: boolean\n              lastCheckpointedTime:\n                format: date-time\n                type: string\n              restoreDone:\n                type: boolean\n            type: object\n        type: object\n    served: true\n    storage: true\n    subresources:\n      status: {}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"manual-checkpoint--restore",children:"Manual Checkpoint & Restore"}),"\n",(0,i.jsxs)(n.p,{children:["To manually checkpoint, simply change the method and specify the sandboxName, which you can get from ",(0,i.jsx)(n.code,{children:"kubectl get pods"}),". An example of a modified spec is shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"---\napiVersion: apiextensions.k8s.io/v1\nkind: CustomResourceDefinition\nmetadata:\n  annotations:\n    controller-gen.kubebuilder.io/version: v0.13.0\n  name: cedanas.core.cedana.ai\nspec:\n  group: core.cedana.ai\n  names:\n    kind: Cedana\n    listKind: CedanaList\n    plural: cedanas\n    singular: cedana\n  scope: Namespaced\n  method: checkpoint \n  sandboxName: some-sandbox-id-from-kubectl-get-pods\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then simply apply this with ",(0,i.jsx)(n.code,{children:"kubectl apply -f file.yaml"})," to conduct a checkpoint."]}),"\n",(0,i.jsx)(n.p,{children:"To manually restore, simply change the method name."})]})}function l(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var i=t(7294);const a={},o=i.createContext(a);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);