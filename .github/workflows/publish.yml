name: Publish

on:
  workflow_call:
    inputs:
      debug:
        type: boolean
        description: "Run with debugging enabled"
        required: false
        default: false
      github:
        type: boolean
        description: "Publish to GitHub releases"
        required: false
        default: false
      cloudsmith:
        type: boolean
        description: "Publish to Cloudsmith"
        required: false
        default: false
      cloudsmith_repo:
        type: string
        description: "Cloudsmith repository to publish to"
        required: false
        default: cedana
      dockerhub:
        type: boolean
        description: "Publish images to Docker Hub"
        required: false
        default: false
      image_name:
        type: string
        description: "Name of the image to publish"
        required: false
        default: cedana/cedana-helper
      post_summary:
        type: boolean
        description: "Post summary to Slack"
        required: false
        default: false

jobs:
  github:
    name: GitHub
    if: inputs.github
    runs-on: ubuntu-latest
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug
        with:
          limit-access-to-actor: true

      - name: Download Cedana binary
        uses: actions/download-artifact@v4
        id: download-binaries-cedana
        with:
          name: cedana

      - name: Download Cedana plugins
        uses: actions/download-artifact@v4
        id: download-binaries-plugins
        with:
          name: plugins

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          args: release --clean --auto-snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cloudsmith:
    name: Cloudsmith
    if: inputs.cloudsmith
    runs-on: ubuntu-latest
    steps:
      - name: Download Cedana binary
        uses: actions/download-artifact@v4
        id: download-binaries-cedana
        with:
          name: cedana

      - name: Download Cedana plugins
        uses: actions/download-artifact@v4
        id: download-binaries-plugins
        with:
          name: plugins

      - name: Push cedana to Cloudsmith
        id: push-cedana
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: "${{ inputs.cloudsmith_repo }}"
          file: "cedana"
          name: "cedana"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

      - name: Push libcedana-runc.so to Cloudsmith
        id: push-libcedana-runc
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: ${{ inputs.cloudsmith_repo }}
          file: "libcedana-runc.so"
          name: "libcedana-runc.so"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

      - name: Push libcedana-containerd.so to Cloudsmith
        id: push-libcedana-containerd
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: ${{ inputs.cloudsmith_repo }}
          file: "libcedana-containerd.so"
          name: "libcedana-containerd.so"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

      - name: Push libcedana-crio.so to Cloudsmith
        id: push-libcedana-crio
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: ${{ inputs.cloudsmith_repo }}
          file: "libcedana-crio.so"
          name: "libcedana-crio.so"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

      - name: Push libcedana-k8s.so to Cloudsmith
        id: push-libcedana-k8s
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: ${{ inputs.cloudsmith_repo }}
          file: "libcedana-k8s.so"
          name: "libcedana-k8s.so"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

      - name: Push libcedana-cloud-hypervisor.so to Cloudsmith
        id: push-libcedana-cloud-hypervisor
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: ${{ inputs.cloudsmith_repo }}
          file: "libcedana-cloud-hypervisor.so"
          name: "libcedana-cloud-hypervisor.so"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

      - name: Push libcedana-kata.so to Cloudsmith
        id: push-libcedana-kata
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "raw"
          owner: "cedana"
          repo: ${{ inputs.cloudsmith_repo }}
          file: "libcedana-kata.so"
          name: "libcedana-kata.so"
          version: ${{ github.head_ref || github.ref_name }}
          republish: "true"

  dockerhub:
    name: DockerHub
    if: inputs.dockerhub
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.image_name }}
          tags: |
            type=raw,value=${{ github.head_ref || github.ref_name }}-${{ github.sha }}
            type=raw,value=${{ github.head_ref || github.ref_name }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ inputs.image_name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          # check if push was successful
          docker buildx imagetools inspect ${{ inputs.image_name }}:${{ steps.meta.outputs.version }}
          # check if commit sha matches with the latest commit sha
          # we only match docker hub image as both images should be the same
          echo $(docker run -i --rm ${{ inputs.image_name }}:${{ steps.meta.outputs.version }} -c "cedana -v")

  post-summary:
    name: Post Summary
    runs-on: ubuntu-latest
    needs: ["github", "cloudsmith", "dockerhub"]
    if: inputs.post_summary
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          fetch-tags: true

      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::$(git tag --sort=-creatordate | sed -n '1p')

      - name: Get previous tag
        id: previous-tag
        run: |
          echo ::set-output name=tag::$(git tag --sort=-creatordate | sed -n '2p')

      - name: Get release info
        id: release-info
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          token: ${{ github.token }}
          excludes: draft
          repository: ${{ github.repository }}

      - name: Download binaries
        id: download
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          TAG: ${{ steps.tag.outputs.tag }}
        run: |
          mkdir current
          cd current
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/cedana
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-runc.so
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-containerd.so
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-crio.so
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-k8s.so
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-kata.so
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-cloud-hypervisor.so

      - name: Download previous binary
        id: download-previous
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          TAG: ${{ steps.previous-tag.outputs.tag }}
        run: |
          mkdir previous
          cd previous
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/cedana || true
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-runc.so || true
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-containerd.so || true
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-crio.so || true
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-k8s.so || true
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-kata.so || true
          curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/$TAG/libcedana-cloud-hypervisor.so || true

      - name: Generate summary
        id: summary
        env:
          RELEASE_TITLE: "cedana"
          RELEASE_DESCRIPTION: "**${{ steps.tag.outputs.tag }}**"
          RELEASE_NOTES_URL: https://github.com/${{ github.repository }}/releases/${{ steps.tag.outputs.tag }}
          RELEASE_BODY: "${{ steps.release-info.outputs.description }}"
          TAG: ${{ steps.tag.outputs.tag }}
          BINARIES_DIR: current
          PREVIOUS_TAG: ${{ steps.previous-tag.outputs.tag }}
          PREVIOUS_BINARIES_DIR: previous
        run: |
          echo $RELEASE_BODY > $GITHUB_STEP_SUMMARY
          echo ::set-output name=slack-summary::$(scripts/ci/release-summary-slack)

      - name: Post summary
        id: slack-patch
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_RELEASE }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            ${{ steps.summary.outputs.slack-summary }}
