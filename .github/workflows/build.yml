name: Build

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: "The branch, tag, or SHA to run on"
        required: false
        default: ""
      debug:
        type: boolean
        description: "Run with debugging enabled"
        required: false
        default: false
      amd64:
        type: boolean
        description: "Build for amd64"
        required: false
        default: false
      amd64_image:
        type: boolean
        description: "Build amd64 Docker image"
        required: false
        default: false
      arm64_image:
        type: boolean
        description: "Build arm64 Docker image"
        required: false
        default: false
      image_name:
        type: string
        description: "Name of the Docker image to build"
        required: false
        default: "cedana/cedana-helper"

jobs:
  cedana-amd64:
    name: Cedana (amd64)
    runs-on: ubicloud-standard-2
    if: inputs.amd64
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug
        with:
          limit-access-to-actor: true

      - name: Build
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cedana
          path: ./cedana

  plugins-amd64:
    name: Plugins (amd64)
    runs-on: ubicloud-standard-2
    if: inputs.amd64
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug
        with:
          limit-access-to-actor: true

      - name: Build
        run: make plugins

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugins
          path: ./libcedana-*.so

  image-amd64:
    name: Image (amd64)
    runs-on: ubicloud-standard-8
    if: inputs.amd64_image
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
          submodules: recursive
          fetch-tags: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ inputs.image_name }}

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug }}
        with:
          limit-access-to-actor: true

      - name: Build and generate manifest for amd64
        id: build
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          platforms: linux/amd64
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=image,name=${{ inputs.image_name }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest amd64
        uses: actions/upload-artifact@v4
        with:
          name: digests-amd64
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  image-arm64:
    name: Image (arm64)
    runs-on: ubicloud-standard-8-arm
    if: inputs.arm64_image
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          fetch-tags: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ inputs.image_name }}

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug }}
        with:
          limit-access-to-actor: true

      - name: Build and generate manifest for arm64
        id: build
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          platforms: linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=image,name=${{ inputs.image_name }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest arm64
        uses: actions/upload-artifact@v4
        with:
          name: digests-arm64
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
