name: Build

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: "The branch, tag, or SHA to run on"
        required: false
        default: ""
      debug:
        type: boolean
        description: "Run with debugging enabled"
        required: false
        default: false
      cedana:
        type: boolean
        description: "Build Cedana"
        required: false
        default: false
      plugins:
        type: boolean
        description: "Build plugins"
        required: false
        default: false
      image:
        type: boolean
        description: "Build Docker image"
        required: false
        default: false
      image_name:
        type: string
        description: "Name of the Docker image to build"
        required: false
        default: "cedana/cedana-helper"

jobs:
  cedana:
    name: Cedana
    runs-on: runs-on=${{github.run_id}}/runner=t-medium-${{ matrix.arch }}/extras=s3-cache
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    if: inputs.cedana
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: runs-on/action@v1
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug
        with:
          limit-access-to-actor: true

      - name: Go build cache
        uses: runs-on/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: cedana-build-${{ matrix.arch }}

      - name: Go mod cache
        uses: runs-on/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: cedana-mod-${{ matrix.arch }}

      - name: Build
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cedana-${{ matrix.arch }}
          path: ./cedana

  plugins:
    name: Plugins
    runs-on: runs-on=${{github.run_id}}/runner=t-medium-${{ matrix.arch }}/extras=s3-cache
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    if: inputs.plugins
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: runs-on/action@v1
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug
        with:
          limit-access-to-actor: true

      - name: Go build cache
        uses: runs-on/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: plugins-build-${{ matrix.arch }}

      - name: Go mod cache
        uses: runs-on/cache@v4
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: plugins-mod-${{ matrix.arch }}

      - name: Build
        run: make plugins

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugins-${{ matrix.arch }}
          path: ./libcedana-*.so

  image:
    name: Image
    runs-on: runs-on=${{github.run_id}}/runner=t-xlarge-${{ matrix.arch }}/extras=s3-cache
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    if: inputs.image
    permissions:
      contents: read
      packages: write
    steps:
      - uses: runs-on/action@v1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
          submodules: recursive
          fetch-tags: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ inputs.image_name }}

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: inputs.debug
        with:
          limit-access-to-actor: true

      - name: Build and generate manifest
        id: build
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          platforms: linux/${{ matrix.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=image,name=${{ inputs.image_name }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=s3,blobs_prefix=cache/${{ github.repository }}/,manifests_prefix=cache/${{ github.repository }}/,region=${{ env.RUNS_ON_AWS_REGION }},bucket=${{ env.RUNS_ON_S3_BUCKET_CACHE }}
          cache-to: type=s3,blobs_prefix=cache/${{ github.repository }}/,manifests_prefix=cache/${{ github.repository }}/,region=${{ env.RUNS_ON_AWS_REGION }},bucket=${{ env.RUNS_ON_S3_BUCKET_CACHE }},mode=max

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.arch }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
