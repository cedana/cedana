name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      make_release:
        type: boolean
        description: "Run release build without pushing the release"
        required: false
        default: true
      debug_release:
        type: boolean
        description: "Run release with tmate debugging enabled"
        required: false
        default: false
      push_build_image:
        type: boolean
        description: "Run image build without pushing the image"
        required: false
        default: true
      debug_build_push_image:
        type: boolean
        description: "Run build & push with tmate debugging enabled"
        required: false
        default: false
      # debug_build_push_image_to_dockerhub:
      #   type: boolean
      #   description: "Run build & push (dockerhub) with tmate debugging enabled"
      #   required: false
      #   default: false

permissions:
  contents: write

# Cancel any preceding run on the pull request.
concurrency:
  group: docker-test-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/cedana-dev' }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Set up Go
        uses: actions/setup-go@v4

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_release }}
        with:
          limit-access-to-actor: true

      - name: Install dependencies
        run: sudo -E make -C scripts/ci setup-build
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        if: ${{ github.event_name != 'workflow_dispatch' && inputs.make_release }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: release

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ghcr.io/cedana/cedana
            cedana/cedana-helper

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_build_push_image }}
        with:
          limit-access-to-actor: true

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: ${{ github.event_name != 'workflow_dispatch' || inputs.push_build_image }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ steps.get_version.outputs.VERSION }}

  # build-and-push-image-to-dockerhub:
  #   runs-on: ubuntu-latest
  #   needs: release
  #
  #   permissions:
  #     contents: read
  #     packages: write
  #
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: cedana/cedana-helper
  #
  #     # Enable tmate debugging of manually-triggered workflows if the input option was provided
  #     - name: Setup tmate session
  #       uses: mxschmitt/action-tmate@v3
  #       if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_build_push_image_to_dockerhub }}
  #       with:
  #         limit-access-to-actor: true
  #
  #     - name: Get the version
  #       id: get_version
  #       run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
  #
  #     - name: Build and push
  #       uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
  #       with:
  #         context: .
  #         platforms: linux/amd64,linux/arm64
  #         push: ${{ github.event_name != 'workflow_dispatch' || inputs.push_release }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         build-args: VERSION=${{ steps.get_version.outputs.VERSION }}
