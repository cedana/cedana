name: Release 

on:
  push: 
    tags: 
      - '*'

permissions:
  contents: write

# Cancel any preceding run on the pull request.
concurrency:
  group: docker-test-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/cedana-dev' }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v4
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}

  build-and-push-image-to-ghcr: 
    runs-on: ubuntu-latest 
    needs: release

    permissions: 
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4 

      - name: Login to GitHub Container Registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/cedana/cedana

      - name: Build and push 
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  build-and-push-benchmarking-image-to-ghcr: 
    runs-on: ubuntu-latest
    needs: release

    permissions: 
      contents: read
      packages: write

    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/cedana/cedana-benchmarking

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push (benchmarking image)
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:test/benchmarks"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-benchmarking-image-to-dockerhub:
    runs-on: ubuntu-latest
    needs: release

    permissions:
      contents: read
      packages: write

    steps: 
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub 
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: cedana/cedana-benchmarking 

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: "{{defaultContext}}:test/benchmarks"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
