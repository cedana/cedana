name: Download

# This workload downloads external dependencies (binaries)  and uploads them as artifacts,
# that can be used in other workflows.

on:
  workflow_call:
    inputs:
      cedana_version:
        type: string
        description: Version for Cedana binaries (branch name or "release" for latest release)
        required: false
        default: "none"
      gpu_version:
        type: string
        description: Version for GPU binaries (branch name or "release" for latest release)
        required: false
        default: "none"
      streamer_version:
        type: string
        description: Version for streamer binaries (branch name or "release" for latest release)
        required: false
        default: "none"

jobs:
  cedana:
    name: Cedana
    if: ${{ inputs.cedana_version != 'none' }}
    runs-on: runs-on=${{github.run_id}}/runner=1cpu-4g-${{ matrix.arch }}/extras=s3-cache
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Download cedana
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          VERSION: ${{ inputs.cedana_version }}
        run: |
          mkdir -p cedana
          cd cedana
          if [ "$VERSION" = "release" ]; then
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/cedana-${{ matrix.arch }}
          else
            VERSION=$(echo $VERSION | sed 's/\//-/g')
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/cedana-${{ matrix.arch }}
          fi

      - name: Download plugins
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          VERSION: ${{ inputs.cedana_version }}
        run: |
          mkdir -p plugins
          cd plugins
          if [ "$VERSION" = "release" ]; then
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/libcedana-runc.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/libcedana-containerd.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/libcedana-crio.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/libcedana-k8s.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/libcedana-kata.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana/raw/versions/latest/libcedana-cloud-hypervisor.so-${{ matrix.arch }}
          else
            VERSION=$(echo $VERSION | sed 's/\//-/g')
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/libcedana-runc.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/libcedana-containerd.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/libcedana-crio.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/libcedana-k8s.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/libcedana-kata.so-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-alpha/raw/versions/$VERSION/libcedana-cloud-hypervisor.so-${{ matrix.arch }}
          fi

      - name: Upload cedana
        uses: actions/upload-artifact@v4
        with:
          name: cedana-${{ matrix.arch }}
          path: ./cedana/*

      - name: Upload plugins
        uses: actions/upload-artifact@v4
        with:
          name: plugins-${{ matrix.arch }}
          path: ./plugins/*

  gpu:
    name: GPU
    if: ${{ inputs.gpu_version != 'none' }}
    runs-on: runs-on=${{github.run_id}}/runner=1cpu-4g-${{ matrix.arch }}/extras=s3-cache
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Download binaries
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          VERSION: ${{ inputs.gpu_version }}
        run: |
          mkdir -p gpu
          cd gpu
          if [ "$VERSION" = "release" ]; then
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu/raw/versions/latest/cedana-gpu-controller-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu/raw/versions/latest/libcedana-gpu.so-${{ matrix.arch }}
          else
            VERSION=$(echo $VERSION | sed 's/\//-/g')
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu-alpha/raw/versions/$VERSION/cedana-gpu-controller-${{ matrix.arch }}
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu-alpha/raw/versions/$VERSION/libcedana-gpu.so-${{ matrix.arch }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gpu-${{ matrix.arch }}
          path: ./gpu/*

  streamer:
    name: Streamer
    if: ${{ inputs.streamer_version != 'none' }}
    runs-on: runs-on=${{github.run_id}}/runner=1cpu-4g-${{ matrix.arch }}/extras=s3-cache
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - arm64
    steps:
      - name: Download binaries
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          VERSION: ${{ inputs.streamer_version }}
        run: |
          mkdir -p streamer
          cd streamer
          if [ "$VERSION" = "release" ]; then
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-image-streamer/raw/versions/latest/cedana-image-streamer-${{ matrix.arch }}
          else
            VERSION=$(echo $VERSION | sed 's/\//-/g')
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-image-streamer-alpha/raw/versions/$VERSION/cedana-image-streamer-${{ matrix.arch }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: streamer-${{ matrix.arch }}
          path: ./streamer/*
