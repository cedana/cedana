name: Test / CUDA

permissions:
  contents: read
  packages: read
  id-token: write
  pull-requests: write
  checks: write

on:
  workflow_dispatch:

env:
  HF_TOKEN: ${{ secrets.HF_TOKEN }}
  CEDANA_URL: ${{ vars.CEDANA_URL }}
  CEDANA_AUTH_TOKEN: ${{ secrets.CEDANA_AUTH_TOKEN }}
  CEDANA_GA_RUNNER_URL: ${{ secrets.CEDANA_GA_RUNNER_URL }}
  CEDANA_LOG_LEVEL: debug
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CEDANA_SSH_PRIVATE_KEY: ${{ secrets.CEDANA_SSH_PRIVATE_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  CEDANA_LABEL: cedana-amd64-cuda-12-8
  RETRIES: 1
  DEBUG: 0 # bats debug logging

jobs:
  setup-runner:
    runs-on: ubuntu-latest
    outputs:
      instance_id: ${{ steps.create.outputs.instance_id }}
    steps:
      - name: Materialize SSH key
        id: key
        run: |
          umask 077
          echo "${{ secrets.CEDANA_SSH_PRIVATE_KEY }}" > key.pem
          echo "key_path=$PWD/key.pem" >> $GITHUB_OUTPUT

      - name: Create instance and register runner
        id: create
        run: |
          set -e
          # Create & auto-register on instance
          resp=$(curl -s -X POST "$GA_RUNNERS_URL/v1/runners/create" \
            -H "Content-Type: application/json" \
            -d "{
              \"name\": \"gha-${{ github.run_id }}\",
              \"owner\": \"${{ github.repository_owner }}\",
              \"repo\": \"${{ github.event.repository.name }}\",
              \"labels\": [\"self-hosted\",\"cedana\",\"$CEDANA_LABEL\"],
              \"num_gpus\": 1,
              \"gpu_type\": \"A100\",
              \"sort\": \"price\",
              \"ssh_private_key_path\": \"${{ steps.key.outputs.key_path }}\",
              \"strict_host_key_checking\": false
            }")
          echo "$resp"
          INSTANCE_ID=$(echo "$resp" | jq -r '.instance_id')
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

      - name: Validate runner is online
        run: |
          set -e
          curl -s -X POST "$GA_RUNNERS_URL/v1/runners/validate" \
            -H "Content-Type: application/json" \
            -d "{
              \"instance_id\": \"${{ needs.setup-runner.outputs.instance_id }}\",
              \"owner\": \"${{ github.repository_owner }}\",
              \"repo\": \"${{ github.event.repository.name }}\",
              \"labels\": [\"self-hosted\",\"cedana\",\"$CEDANA_LABEL\"]
            }" | tee validate.json
          test "$(jq -r '.valid' validate.json)" = "true"

  gpu-job:
    needs: setup-runner
    runs-on: [self-hosted, cedana, ${{ env.CEDANA_LABEL }}]
    steps:
      - uses: actions/checkout@v4
      - run: nvidia-smi || true
      - run: echo "Run your workload here"

  cleanup-runner:
    needs: [setup-runner, gpu-job]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Unregister and delete
        run: |
          set -e
          curl -s -X POST "$GA_RUNNERS_URL/v1/runners/unregister-existing" \
            -H "Content-Type: application/json" \
            -d "{
              \"instance_id\": \"${{ needs.setup-runner.outputs.instance_id }}\",
              \"owner\": \"${{ github.repository_owner }}\",
              \"repo\": \"${{ github.event.repository.name }}\",
              \"delete_instance\": true
            }" | jq
