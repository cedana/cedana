name: GetRunner


permissions:
  contents: read
  packages: read
  id-token: write
  pull-requests: write
  checks: write

on:
  workflow_call:
    # Add this section to expose job outputs as workflow outputs
    outputs:
      gpu_type:
        description: "The GPU type label for the dynamic runner."
        value: ${{ jobs.create-runner.outputs.gpu_type }}
      instance_id:
        description: "The instance ID of the created runner."
        value: ${{ jobs.create-runner.outputs.instance_id }}


jobs:
  create-runner:
    runs-on: ubuntu-latest
    outputs:
      runner_name: ${{ steps.create_runner.outputs.runner_name }}
      instance_id: ${{ steps.create_runner.outputs.instance_id }}
      gpu_type: ${{ steps.create_runner.outputs.gpu_type }}
    steps:
    - name: Create runner
      id: create_runner
      run: |
        GPU_TYPE="A100"
        echo '{
          "owner": "${{ github.repository_owner }}",
          "repo": "${{ github.event.repository.name }}",
          "labels": ["self-hosted", "'$GPU_TYPE'"],
          "num_gpus": 1,
          "gpu_type": "'$GPU_TYPE'"
        }' > request.json

        response=$(curl --fail -s -X POST \
          -H "Content-Type: application/json" \
          -d @request.json \
          ${{ secrets.CEDANA_GA_RUNNER_URL }}/v1/runners/create)

        instance_id=$(echo $response | jq -r .instance_id)
        echo "instance_id=$instance_id" >> $GITHUB_OUTPUT

  validate-runner:
    needs: create-runner
    runs-on:
      - self-hosted
      - ${{ needs.create-runner.outputs.gpu_type }}
    timeout-minutes: 40
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run a test
      run: |
        echo "Hello from the new runner!"
        ls -la
