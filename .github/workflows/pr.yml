name: PR

on:
  pull_request:
    types: [opened, synchronize, reopened, edited, closed]
  workflow_dispatch:
    inputs:
      debug_build:
        type: boolean
        description: "Run build with debugging enabled"
        required: false
        default: false
      debug_regression_test:
        type: boolean
        description: "Run regression test with debugging enabled"
        required: false
        default: false
      debug_unit_test:
        type: boolean
        description: "Run unit test with debugging enabled"
        required: false
        default: false
      debug_bench:
        type: boolean
        description: "Run benchmark with debugging enabled"
        required: false
        default: false
  workflow_call: # to reuse this workflow in other workflows
    inputs:
      debug_build:
        type: boolean
        description: "Run build with debugging enabled"
        required: false
        default: false
      debug_regression_test:
        type: boolean
        description: "Run regression test with debugging enabled"
        required: false
        default: false
      debug_unit_test:
        type: boolean
        description: "Run unit test with debugging enabled"
        required: false
        default: false
      debug_bench:
        type: boolean
        description: "Run benchmark with debugging enabled"
        required: false
        default: false
      skip_bench:
        type: boolean
        description: "Skip benchmark or not"
        required: false
        default: false
      skip_shellcheck:
        type: boolean
        description: "Skip shellcheck or not"
        required: false
        default: false
      skip_helper_image_push:
        type: boolean
        description: "Skip helper image push or not"
        required: false
        default: false

concurrency:
  group: cedana-pr-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubicloud-standard-2
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_build }}
        with:
          limit-access-to-actor: true

      - name: Build
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./cedana

  build-plugins:
    name: Build (plugins)
    runs-on: ubicloud-standard-2
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_build }}
        with:
          limit-access-to-actor: true

      - name: Build
        run: make plugins

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugins
          path: ./libcedana-*.so

  shellcheck:
    name: Shell Check
    if: ${{ !inputs.skip_shellcheck }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          reporter: github-pr-review
          pattern: |
            *.bash
            *.sh
            *.bats
          check_all_files_with_shebangs: true
          shellcheck_flags: "--external-sources --severity=warning"

  script-tests:
    name: Script Tests
    runs-on: ubuntu-latest
    needs: build
    env:
      CEDANA_URL: ${{ vars.CEDANA_URL }}
      CEDANA_AUTH_TOKEN: ${{ secrets.CEDANA_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build
      - name: Run k8s setup host
        run: |
          sudo -E chmod +x ./cedana
          sudo -E cp ./cedana /usr/local/bin/
          sudo -E mkdir -p /cedana/scripts
          sudo -E cp -r ./scripts/host/* /cedana/scripts/
          sudo -E /cedana/scripts/k8s-setup-host.sh

  unit-test:
    name: Unit Tests
    runs-on: ubicloud-standard-2
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    needs: [build, build-plugins]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Download plugins
        uses: actions/download-artifact@v4
        with:
          name: plugins

      - name: Make executable
        run: |
          chmod +x ./cedana
          chmod +x ./libcedana-*.so

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_unit_test }}
        with:
          limit-access-to-actor: true

      - name: Run unit tests
        run: make test-unit

  regression-test:
    name: Regression Tests
    runs-on: ubicloud-standard-8
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      options: --privileged --init
    needs: [build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Make executable
        run: |
          chmod +x ./cedana
          echo "$PWD" >> $GITHUB_PATH

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_regression_test }}
        with:
          limit-access-to-actor: true

      - name: Run regression tests
        run: make test-regression-cedana

  regression-test-runc:
    name: Regression Tests (runc)
    runs-on: ubicloud-standard-8
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      options: --privileged --init
    needs: [build, build-plugins]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Download plugins
        uses: actions/download-artifact@v4
        with:
          name: plugins

      - name: Make executable
        run: |
          chmod +x ./cedana
          chmod +x ./libcedana-*.so
          echo "$PWD" >> $GITHUB_PATH

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_regression_test }}
        with:
          limit-access-to-actor: true

      - name: Run regression tests
        run: make test-regression-plugin PLUGIN=runc

  regression-test-containerd:
    name: Regression Tests (containerd)
    runs-on: ubicloud-standard-8
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      options: --privileged --init
    needs: [build, build-plugins]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Download plugins
        uses: actions/download-artifact@v4
        with:
          name: plugins

      - name: Make executable
        run: |
          chmod +x ./cedana
          chmod +x ./libcedana-*.so
          echo "$PWD" >> $GITHUB_PATH

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_regression_test }}
        with:
          limit-access-to-actor: true

      - name: Run regression tests
        run: make test-regression-plugin PLUGIN=containerd

  regression-test-crio:
    name: Regression Tests (crio)
    runs-on: ubicloud-standard-8
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      options: --privileged --init
    needs: [build, build-plugins]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Download plugins
        uses: actions/download-artifact@v4
        with:
          name: plugins

      - name: Make executable
        run: |
          chmod +x ./cedana
          chmod +x ./libcedana-*.so
          echo "$PWD" >> $GITHUB_PATH

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_regression_test }}
        with:
          limit-access-to-actor: true

      - name: Run regression tests
        run: make test-regression-plugin PLUGIN=crio

  regression-test-gpu:
    name: Regression Tests (gpu)
    runs-on: ubicloud-standard-8
    container:
      image: cedana/cedana-test:latest
      credentials:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
      options: --privileged --init
    needs: [build, build-plugins]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Download plugins
        uses: actions/download-artifact@v4
        with:
          name: plugins

      - name: Make executable
        run: |
          chmod +x ./cedana
          chmod +x ./libcedana-*.so
          echo "$PWD" >> $GITHUB_PATH

      - name: Mark git dir as safe
        run: git config --global --add safe.directory "$(pwd)"

      - name: Setup debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_regression_test }}
        with:
          limit-access-to-actor: true

      - name: Run regression tests
        run: make test-regression-plugin PLUGIN=gpu

  # benchmark:
  #   name: Benchmark
  #   if: ${{ !inputs.skip_bench }}
  #   permissions:
  #     contents: "read"
  #     packages: "read"
  #     id-token: "write"
  #     pull-requests: "write"
  #   runs-on: ubicloud-standard-8
  #   needs: [build]
  #   container:
  #     image: cedana/cedana-bench:ubuntu
  #     credentials:
  #       username: ${{ vars.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_TOKEN }}
  #     options: --privileged
  #   defaults:
  #     run:
  #       working-directory: /src
  #   steps:
  #     # Github actions unfortunately mounts the docker socket, which we don't want
  #     - name: Workaround for dind
  #       run: |
  #         umount /var/run/docker.sock
  #         sudo service supervisor start
  #         sleep 1
  #         supervisorctl restart dockerd

  #     - name: Download artifacts
  #       id: download-artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build

  #     - name: Configure
  #       env:
  #         PATH_CEDANA: ${{ steps.download-artifacts.outputs.download-path }}
  #         TAG: ${{ github.event.pull_request.head.ref }}
  #         COLOR_PALETTE: ${{ vars.BENCH_PALETTE_COMPARISON_LAST_PATCH }}
  #       run: |
  #         BINDIR=`jq -r '.crtools.list."cedana".bindir' bench.json`
  #         cp $PATH_CEDANA/cedana crtools/cedana/$BINDIR/
  #         jq '.crtools.list."cedana".source = "local"' bench.json > temp.json
  #         mv temp.json bench.json
  #         jq '.crtools.list."cedana".tag = "'$TAG'"' bench.json > temp.json
  #         mv temp.json bench.json
  #         jq '.plots.color_palette = "'$COLOR_PALETTE'"' bench.json > temp.json
  #         mv temp.json bench.json
  #
  # env:
  #   PROJECT_ID: ${{ vars.GCLOUD_BENCHMARK_PROJECT_ID }}
  #   WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
  #   SERVICE_ACCOUNT: ${{ vars.GCLOUD_SERVICE_ACCOUNT }}
  # with:
  #   project_id: ${{ env.PROJECT_ID }}
  #   workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
  #   service_account: ${{ env.SERVICE_ACCOUNT }}

  #     - name: Pull last result
  #       env:
  #         GCLOUD_PROJECT: ${{ vars.GCLOUD_BENCHMARK_PROJECT_ID }}
  #         BIGQUERY_RESULTS_DATASET: ${{ vars.BIGQUERY_BENCH_RESULTS_DATASET }}
  #       run: ./bench results pull --runtime cedana:1

  #     - name: Setup debugging session
  #       uses: mxschmitt/action-tmate@v3
  #       if: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_bench }}
  #       with:
  #         limit-access-to-actor: true

  #     - name: Run
  #       env:
  #         CLOUDSMITH_CEDANA_BENCH_TOKEN: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
  #         HF_TOKEN: ${{ secrets.HF_TOKEN }}
  #         CMD: ${{ vars.BENCH_RUN_CMD_PR }}
  #       run: $CMD

  #     - name: Upload logs
  #       if: always()
  #       id: upload-logs
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: bench-logs
  #         path: |
  #           /src/*.log

  #     - name: Plot comparison
  #       if: always()
  #       env:
  #         FLAGS: ${{ vars.BENCH_PLOT_FLAGS }}
  #       run: ./bench plot --runtime cedana:2 --save $FLAGS

  #     - name: Upload plots
  #       if: always()
  #       id: upload-plots
  #       uses: google-github-actions/upload-cloud-storage@v2
  #       with:
  #         predefinedAcl: publicRead
  #         project_id: ${{ steps.auth.outputs.project_id }}
  #         path: /src/results
  #         destination: cedana/pr-${{ github.event.pull_request.number }}
  #         glob: "**/*.png"

  #     - name: Generate summary
  #       if: always()
  #       env:
  #         RESULTS_BASE_URL: https://storage.googleapis.com/cedana/pr-${{ github.event.pull_request.number }}/results
  #         RESULTS_TITLE: "## Benchmark preview"
  #         RESULTS_DESCRIPTION: "> **${{ github.event.pull_request.head.ref }}** comparison w/ last patch\n*Updates on every commit to this branch*"
  #       run: |
  #         utils/results-summary > summary.md
  #         cat summary.md > $GITHUB_STEP_SUMMARY

  #     - name: Post summary
  #       if: always()
  #       uses: thollander/actions-comment-pull-request@v2
  #       with:
  #         filePath: /src/summary.md
  #         comment_tag: execution

  helper-image-push:
    name: Push Helper Test Image
    runs-on: ubicloud-standard-2
    needs: [build]
    if: ${{ !inputs.skip_helper_image_push }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Set up commit hash and branch name
        run: |
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cedana/cedana-helper-test
          tags: |
            type=raw,value=${{ env.GIT_BRANCH }}-${{ env.GIT_HASH }}
            type=raw,value=${{ env.GIT_BRANCH }}

      - name: Build and push to cedana-helper-test
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
