name: PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      debug_build:
        type: boolean
        description: "Run build with debugging enabled"
        required: false
        default: false
      debug_test:
        type: boolean
        description: "Run tests with debugging enabled"
        required: false
        default: false
      debug_bench:
        type: boolean
        description: "Run benchmark with debugging enabled"
        required: false
        default: false
      gpu_version:
        type: string
        description: Version for GPU binaries (branch name or "release")
        required: false
        default: "main"
      streamer_version:
        type: string
        description: Version for streamer binaries (branch name or "release")
        required: false
        default: "main"

concurrency:
  group: cedana-pr-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      debug: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_build }}
      publish_alpha: true

  test:
    name: Test
    uses: ./.github/workflows/test.yml
    needs: [build, download-deps]
    secrets: inherit
    with:
      debug: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_test }}

  bench:
    name: Bench
    uses: ./.github/workflows/bench.yml
    needs: [build, download-deps]
    secrets: inherit
    with:
      debug: ${{ startsWith(github.event_name, 'workflow') && inputs.debug_bench }}
      samples: 2
      push_results: false
      post_summary_pr: true
      post_summary_slack: false
      comparison_patch: true

  shellcheck:
    name: Shell Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          reporter: github-pr-review
          pattern: |
            *.bash
            *.sh
            *.bats
          check_all_files_with_shebangs: true
          shellcheck_flags: "--external-sources --severity=warning"

  script-tests:
    name: Script Tests
    runs-on: ubuntu-latest
    needs: build
    env:
      CEDANA_URL: ${{ vars.CEDANA_URL }}
      CEDANA_AUTH_TOKEN: ${{ secrets.CEDANA_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/download-artifact@v4
        with:
          name: cedana

      - name: Run k8s setup host
        run: |
          sudo -E chmod +x ./cedana
          sudo -E cp ./cedana /usr/local/bin/
          sudo -E mkdir -p /cedana/scripts
          sudo -E cp -r ./scripts/host/* /cedana/scripts/
          sudo -E /cedana/scripts/k8s-setup-host.sh

  helper-image-push:
    name: Push Helper Test Image
    runs-on: ubicloud-standard-4
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          repository: cedana/cedana # required for workflows reusing this workflow
          ref: ${{ inputs.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Set up commit hash and branch name
        run: |
          echo "GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "GIT_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cedana/cedana-helper-test
          tags: |
            type=raw,value=${{ env.GIT_BRANCH }}-${{ env.GIT_HASH }}
            type=raw,value=${{ env.GIT_BRANCH }}

      - name: Build and push to cedana-helper-test
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  download-deps:
    name: Download Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries (GPU)
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          VERSION: ${{ inputs.gpu_version }}
        run: |
          mkdir -p gpu
          cd gpu
          if [ "$VERSION" = "release" ]; then
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu/raw/versions/latest/cedana-gpu-controller
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu/raw/versions/latest/libcedana-gpu.so
          else
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu-alpha/raw/versions/$VERSION/cedana-gpu-controller
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-gpu-alpha/raw/versions/$VERSION/libcedana-gpu.so
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gpu
          path: ./gpu/*

      - name: Download binaries (streamer)
        env:
          API_KEY: ${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}
          VERSION: ${{ inputs.streamer_version }}
        run: |
          mkdir -p streamer
          cd streamer
          if [ "$VERSION" = "release" ]; then
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-image-streamer/raw/versions/latest/cedana-image-streamer
          else
            curl -1sLf -O https://dl.cloudsmith.io/$API_KEY/cedana/cedana-image-streamer-alpha/raw/versions/$VERSION/cedana-image-streamer
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: streamer
          path: ./streamer/*
