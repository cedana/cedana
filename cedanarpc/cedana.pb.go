// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.2
// source: cedana.proto

package cedanarpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckpointType int32

const (
	CheckpointType_CHECKPOINT_TYPE_NONE    CheckpointType = 0
	CheckpointType_CHECKPOINT_TYPE_CRIU    CheckpointType = 1
	CheckpointType_CHECKPOINT_TYPE_PYTORCH CheckpointType = 2
)

// Enum value maps for CheckpointType.
var (
	CheckpointType_name = map[int32]string{
		0: "CHECKPOINT_TYPE_NONE",
		1: "CHECKPOINT_TYPE_CRIU",
		2: "CHECKPOINT_TYPE_PYTORCH",
	}
	CheckpointType_value = map[string]int32{
		"CHECKPOINT_TYPE_NONE":    0,
		"CHECKPOINT_TYPE_CRIU":    1,
		"CHECKPOINT_TYPE_PYTORCH": 2,
	}
)

func (x CheckpointType) Enum() *CheckpointType {
	p := new(CheckpointType)
	*p = x
	return p
}

func (x CheckpointType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckpointType) Descriptor() protoreflect.EnumDescriptor {
	return file_cedana_proto_enumTypes[0].Descriptor()
}

func (CheckpointType) Type() protoreflect.EnumType {
	return &file_cedana_proto_enumTypes[0]
}

func (x CheckpointType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckpointType.Descriptor instead.
func (CheckpointType) EnumDescriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{0}
}

type CheckpointState int32

const (
	CheckpointState_CHECKPOINT_STATE_CHECKPOINT_SUCCESS CheckpointState = 0
	CheckpointState_CHECKPOINT_STATE_CHECKPOINT_FAILED  CheckpointState = 1
	CheckpointState_CHECKPOINT_STATE_RESTORE_SUCCESS    CheckpointState = 2
	CheckpointState_CHECKPOINT_STATE_RESTORE_FAILED     CheckpointState = 3
)

// Enum value maps for CheckpointState.
var (
	CheckpointState_name = map[int32]string{
		0: "CHECKPOINT_STATE_CHECKPOINT_SUCCESS",
		1: "CHECKPOINT_STATE_CHECKPOINT_FAILED",
		2: "CHECKPOINT_STATE_RESTORE_SUCCESS",
		3: "CHECKPOINT_STATE_RESTORE_FAILED",
	}
	CheckpointState_value = map[string]int32{
		"CHECKPOINT_STATE_CHECKPOINT_SUCCESS": 0,
		"CHECKPOINT_STATE_CHECKPOINT_FAILED":  1,
		"CHECKPOINT_STATE_RESTORE_SUCCESS":    2,
		"CHECKPOINT_STATE_RESTORE_FAILED":     3,
	}
)

func (x CheckpointState) Enum() *CheckpointState {
	p := new(CheckpointState)
	*p = x
	return p
}

func (x CheckpointState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckpointState) Descriptor() protoreflect.EnumDescriptor {
	return file_cedana_proto_enumTypes[1].Descriptor()
}

func (CheckpointState) Type() protoreflect.EnumType {
	return &file_cedana_proto_enumTypes[1]
}

func (x CheckpointState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckpointState.Descriptor instead.
func (CheckpointState) EnumDescriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{1}
}

type Flag int32

const (
	Flag_FLAG_JOB_STARTUP_FAILED Flag = 0
	Flag_FLAG_JOB_KILLED         Flag = 1
	Flag_FLAG_JOB_IDLE           Flag = 2
	Flag_FLAG_JOB_RUNNING        Flag = 3
	Flag_FLAG_JOB_PENDING        Flag = 4
	Flag_FLAG_SETUP_FAILED       Flag = 5
	Flag_FLAG_DONE               Flag = 6
)

// Enum value maps for Flag.
var (
	Flag_name = map[int32]string{
		0: "FLAG_JOB_STARTUP_FAILED",
		1: "FLAG_JOB_KILLED",
		2: "FLAG_JOB_IDLE",
		3: "FLAG_JOB_RUNNING",
		4: "FLAG_JOB_PENDING",
		5: "FLAG_SETUP_FAILED",
		6: "FLAG_DONE",
	}
	Flag_value = map[string]int32{
		"FLAG_JOB_STARTUP_FAILED": 0,
		"FLAG_JOB_KILLED":         1,
		"FLAG_JOB_IDLE":           2,
		"FLAG_JOB_RUNNING":        3,
		"FLAG_JOB_PENDING":        4,
		"FLAG_SETUP_FAILED":       5,
		"FLAG_DONE":               6,
	}
)

func (x Flag) Enum() *Flag {
	p := new(Flag)
	*p = x
	return p
}

func (x Flag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Flag) Descriptor() protoreflect.EnumDescriptor {
	return file_cedana_proto_enumTypes[2].Descriptor()
}

func (Flag) Type() protoreflect.EnumType {
	return &file_cedana_proto_enumTypes[2]
}

func (x Flag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Flag.Descriptor instead.
func (Flag) EnumDescriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{2}
}

type CheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID    string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	WorkerID string `protobuf:"bytes,2,opt,name=workerID,proto3" json:"workerID,omitempty"`
}

func (x *CheckpointRequest) Reset() {
	*x = CheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointRequest) ProtoMessage() {}

func (x *CheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointRequest.ProtoReflect.Descriptor instead.
func (*CheckpointRequest) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{0}
}

func (x *CheckpointRequest) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *CheckpointRequest) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

type RestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID          string         `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	WorkerID       string         `protobuf:"bytes,2,opt,name=workerID,proto3" json:"workerID,omitempty"`
	Path           string         `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CheckpointType CheckpointType `protobuf:"varint,4,opt,name=checkpointType,proto3,enum=cedanarpc.CheckpointType" json:"checkpointType,omitempty"`
}

func (x *RestoreRequest) Reset() {
	*x = RestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreRequest) ProtoMessage() {}

func (x *RestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreRequest.ProtoReflect.Descriptor instead.
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{1}
}

func (x *RestoreRequest) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *RestoreRequest) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *RestoreRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RestoreRequest) GetCheckpointType() CheckpointType {
	if x != nil {
		return x.CheckpointType
	}
	return CheckpointType_CHECKPOINT_TYPE_NONE
}

type OpenFilesStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Fd   uint64 `protobuf:"varint,2,opt,name=fd,proto3" json:"fd,omitempty"`
}

func (x *OpenFilesStat) Reset() {
	*x = OpenFilesStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenFilesStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenFilesStat) ProtoMessage() {}

func (x *OpenFilesStat) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenFilesStat.ProtoReflect.Descriptor instead.
func (*OpenFilesStat) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{2}
}

func (x *OpenFilesStat) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *OpenFilesStat) GetFd() uint64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

type Addr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Addr) Reset() {
	*x = Addr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Addr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Addr) ProtoMessage() {}

func (x *Addr) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Addr.ProtoReflect.Descriptor instead.
func (*Addr) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{3}
}

func (x *Addr) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Addr) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ConnectionStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fd         uint32  `protobuf:"varint,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Family     uint32  `protobuf:"varint,2,opt,name=family,proto3" json:"family,omitempty"`
	Type       uint32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	LocalAddr  *Addr   `protobuf:"bytes,4,opt,name=localAddr,proto3" json:"localAddr,omitempty"`
	RemoteAddr *Addr   `protobuf:"bytes,5,opt,name=remoteAddr,proto3" json:"remoteAddr,omitempty"`
	Status     string  `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Uids       []int32 `protobuf:"varint,7,rep,packed,name=uids,proto3" json:"uids,omitempty"`
	Pid        int32   `protobuf:"varint,8,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *ConnectionStat) Reset() {
	*x = ConnectionStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStat) ProtoMessage() {}

func (x *ConnectionStat) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStat.ProtoReflect.Descriptor instead.
func (*ConnectionStat) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectionStat) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *ConnectionStat) GetFamily() uint32 {
	if x != nil {
		return x.Family
	}
	return 0
}

func (x *ConnectionStat) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ConnectionStat) GetLocalAddr() *Addr {
	if x != nil {
		return x.LocalAddr
	}
	return nil
}

func (x *ConnectionStat) GetRemoteAddr() *Addr {
	if x != nil {
		return x.RemoteAddr
	}
	return nil
}

func (x *ConnectionStat) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConnectionStat) GetUids() []int32 {
	if x != nil {
		return x.Uids
	}
	return nil
}

func (x *ConnectionStat) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ClientInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string `protobuf:"bytes,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Hostname        string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Platform        string `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Os              string `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`
	Uptime          uint64 `protobuf:"varint,5,opt,name=uptime,proto3" json:"uptime,omitempty"`
	RemainingMemory uint64 `protobuf:"varint,6,opt,name=remainingMemory,proto3" json:"remainingMemory,omitempty"`
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{5}
}

func (x *ClientInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ClientInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ClientInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ClientInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ClientInfo) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *ClientInfo) GetRemainingMemory() uint64 {
	if x != nil {
		return x.RemainingMemory
	}
	return 0
}

type ProcessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid                     int32             `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	AttachedToHardwareAccel bool              `protobuf:"varint,2,opt,name=attachedToHardwareAccel,proto3" json:"attachedToHardwareAccel,omitempty"`
	OpenFds                 []*OpenFilesStat  `protobuf:"bytes,3,rep,name=openFds,proto3" json:"openFds,omitempty"`
	OpenWriteOnlyFilePaths  []string          `protobuf:"bytes,4,rep,name=openWriteOnlyFilePaths,proto3" json:"openWriteOnlyFilePaths,omitempty"`
	OpenConnections         []*ConnectionStat `protobuf:"bytes,5,rep,name=openConnections,proto3" json:"openConnections,omitempty"`
	MemoryPercent           float32           `protobuf:"fixed32,6,opt,name=memoryPercent,proto3" json:"memoryPercent,omitempty"`
	IsRunning               bool              `protobuf:"varint,7,opt,name=isRunning,proto3" json:"isRunning,omitempty"`
	Status                  string            `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{6}
}

func (x *ProcessInfo) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessInfo) GetAttachedToHardwareAccel() bool {
	if x != nil {
		return x.AttachedToHardwareAccel
	}
	return false
}

func (x *ProcessInfo) GetOpenFds() []*OpenFilesStat {
	if x != nil {
		return x.OpenFds
	}
	return nil
}

func (x *ProcessInfo) GetOpenWriteOnlyFilePaths() []string {
	if x != nil {
		return x.OpenWriteOnlyFilePaths
	}
	return nil
}

func (x *ProcessInfo) GetOpenConnections() []*ConnectionStat {
	if x != nil {
		return x.OpenConnections
	}
	return nil
}

func (x *ProcessInfo) GetMemoryPercent() float32 {
	if x != nil {
		return x.MemoryPercent
	}
	return 0
}

func (x *ProcessInfo) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *ProcessInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID           string          `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	WorkerID        string          `protobuf:"bytes,2,opt,name=workerID,proto3" json:"workerID,omitempty"`
	ClientInfo      *ClientInfo     `protobuf:"bytes,3,opt,name=clientInfo,proto3" json:"clientInfo,omitempty"`
	ProcessInfo     *ProcessInfo    `protobuf:"bytes,4,opt,name=processInfo,proto3" json:"processInfo,omitempty"`
	CheckpointType  CheckpointType  `protobuf:"varint,5,opt,name=checkpointType,proto3,enum=cedanarpc.CheckpointType" json:"checkpointType,omitempty"`
	CheckpointPath  string          `protobuf:"bytes,6,opt,name=checkpointPath,proto3" json:"checkpointPath,omitempty"`
	CheckpointState CheckpointState `protobuf:"varint,7,opt,name=checkpointState,proto3,enum=cedanarpc.CheckpointState" json:"checkpointState,omitempty"`
	Flag            Flag            `protobuf:"varint,8,opt,name=flag,proto3,enum=cedanarpc.Flag" json:"flag,omitempty"`
}

func (x *StateResponse) Reset() {
	*x = StateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cedana_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateResponse) ProtoMessage() {}

func (x *StateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cedana_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateResponse.ProtoReflect.Descriptor instead.
func (*StateResponse) Descriptor() ([]byte, []int) {
	return file_cedana_proto_rawDescGZIP(), []int{7}
}

func (x *StateResponse) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *StateResponse) GetWorkerID() string {
	if x != nil {
		return x.WorkerID
	}
	return ""
}

func (x *StateResponse) GetClientInfo() *ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *StateResponse) GetProcessInfo() *ProcessInfo {
	if x != nil {
		return x.ProcessInfo
	}
	return nil
}

func (x *StateResponse) GetCheckpointType() CheckpointType {
	if x != nil {
		return x.CheckpointType
	}
	return CheckpointType_CHECKPOINT_TYPE_NONE
}

func (x *StateResponse) GetCheckpointPath() string {
	if x != nil {
		return x.CheckpointPath
	}
	return ""
}

func (x *StateResponse) GetCheckpointState() CheckpointState {
	if x != nil {
		return x.CheckpointState
	}
	return CheckpointState_CHECKPOINT_STATE_CHECKPOINT_SUCCESS
}

func (x *StateResponse) GetFlag() Flag {
	if x != nil {
		return x.Flag
	}
	return Flag_FLAG_JOB_STARTUP_FAILED
}

var File_cedana_proto protoreflect.FileDescriptor

var file_cedana_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x22, 0x45, 0x0a, 0x11, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x99, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x0d,
	0x4f, 0x70, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x66,
	0x64, 0x22, 0x2a, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xea, 0x01,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x66, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x22, 0xe6, 0x02, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x54, 0x6f, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x54, 0x6f, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x12,
	0x32, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e,
	0x46, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x4f, 0x6e, 0x6c, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x6e,
	0x6c, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x6f,
	0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x88, 0x03, 0x0a,
	0x0d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x65, 0x64, 0x61,
	0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x0f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x2a, 0x61, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x45,
	0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x49, 0x55, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x59, 0x54, 0x4f, 0x52, 0x43, 0x48, 0x10, 0x02, 0x2a, 0xad, 0x01, 0x0a, 0x0f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27,
	0x0a, 0x23, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x48, 0x45, 0x43, 0x4b,
	0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x24, 0x0a, 0x20, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x50, 0x4f,
	0x49, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x9d, 0x01, 0x0a, 0x04, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4a, 0x4f, 0x42, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x4b, 0x49, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4a, 0x4f,
	0x42, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x4c, 0x41, 0x47,
	0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4a, 0x4f, 0x42, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x53, 0x45, 0x54,
	0x55, 0x50, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x4c, 0x41, 0x47, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x06, 0x32, 0x5b, 0x0a, 0x11, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x2e,
	0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x65,
	0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x52, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61,
	0x2f, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x2f, 0x63, 0x65, 0x64, 0x61, 0x6e, 0x61, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cedana_proto_rawDescOnce sync.Once
	file_cedana_proto_rawDescData = file_cedana_proto_rawDesc
)

func file_cedana_proto_rawDescGZIP() []byte {
	file_cedana_proto_rawDescOnce.Do(func() {
		file_cedana_proto_rawDescData = protoimpl.X.CompressGZIP(file_cedana_proto_rawDescData)
	})
	return file_cedana_proto_rawDescData
}

var file_cedana_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cedana_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cedana_proto_goTypes = []interface{}{
	(CheckpointType)(0),       // 0: cedanarpc.CheckpointType
	(CheckpointState)(0),      // 1: cedanarpc.CheckpointState
	(Flag)(0),                 // 2: cedanarpc.Flag
	(*CheckpointRequest)(nil), // 3: cedanarpc.CheckpointRequest
	(*RestoreRequest)(nil),    // 4: cedanarpc.RestoreRequest
	(*OpenFilesStat)(nil),     // 5: cedanarpc.OpenFilesStat
	(*Addr)(nil),              // 6: cedanarpc.Addr
	(*ConnectionStat)(nil),    // 7: cedanarpc.ConnectionStat
	(*ClientInfo)(nil),        // 8: cedanarpc.ClientInfo
	(*ProcessInfo)(nil),       // 9: cedanarpc.ProcessInfo
	(*StateResponse)(nil),     // 10: cedanarpc.StateResponse
}
var file_cedana_proto_depIdxs = []int32{
	0,  // 0: cedanarpc.RestoreRequest.checkpointType:type_name -> cedanarpc.CheckpointType
	6,  // 1: cedanarpc.ConnectionStat.localAddr:type_name -> cedanarpc.Addr
	6,  // 2: cedanarpc.ConnectionStat.remoteAddr:type_name -> cedanarpc.Addr
	5,  // 3: cedanarpc.ProcessInfo.openFds:type_name -> cedanarpc.OpenFilesStat
	7,  // 4: cedanarpc.ProcessInfo.openConnections:type_name -> cedanarpc.ConnectionStat
	8,  // 5: cedanarpc.StateResponse.clientInfo:type_name -> cedanarpc.ClientInfo
	9,  // 6: cedanarpc.StateResponse.processInfo:type_name -> cedanarpc.ProcessInfo
	0,  // 7: cedanarpc.StateResponse.checkpointType:type_name -> cedanarpc.CheckpointType
	1,  // 8: cedanarpc.StateResponse.checkpointState:type_name -> cedanarpc.CheckpointState
	2,  // 9: cedanarpc.StateResponse.flag:type_name -> cedanarpc.Flag
	3,  // 10: cedanarpc.CheckpointService.Checkpoint:input_type -> cedanarpc.CheckpointRequest
	4,  // 11: cedanarpc.RestoreService.Restore:input_type -> cedanarpc.RestoreRequest
	10, // 12: cedanarpc.CheckpointService.Checkpoint:output_type -> cedanarpc.StateResponse
	10, // 13: cedanarpc.RestoreService.Restore:output_type -> cedanarpc.StateResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_cedana_proto_init() }
func file_cedana_proto_init() {
	if File_cedana_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cedana_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenFilesStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Addr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cedana_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cedana_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_cedana_proto_goTypes,
		DependencyIndexes: file_cedana_proto_depIdxs,
		EnumInfos:         file_cedana_proto_enumTypes,
		MessageInfos:      file_cedana_proto_msgTypes,
	}.Build()
	File_cedana_proto = out.File
	file_cedana_proto_rawDesc = nil
	file_cedana_proto_goTypes = nil
	file_cedana_proto_depIdxs = nil
}
