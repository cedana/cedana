#!/usr/bin/env python3
"""
Release summary JSON for Slack using Block Kit
"""

import json
import os

TITLE = os.getenv('RELEASE_TITLE') or 'Release summary'
DESCRIPTION = os.getenv('RELEASE_DESCRIPTION') or os.getenv('TAG') or '...'
RELEASE_NOTES_URL = (
    os.getenv('RELEASE_NOTES_URL')
    or 'https://github.com/cedana/cedana/pkg/releases'
)
BODY = os.getenv('RELEASE_BODY')
TAG = os.getenv('TAG')
BINARY = os.getenv('BINARY')
PREVIOUS_TAG = os.getenv('PREVIOUS_TAG')
PREVIOUS_BINARY = os.getenv('PREVIOUS_BINARY')

TITLE = TITLE.replace('**', '*')
DESCRIPTION = DESCRIPTION.replace('**', '*')

blocks = []
blocks.append(
    {
        'type': 'header',
        'text': {'type': 'plain_text', 'text': TITLE, 'emoji': True},
    }
)
blocks.append(
    {
        'type': 'section',
        'text': {'type': 'mrkdwn', 'text': DESCRIPTION},
        'accessory': {
            'type': 'button',
            'text': {
                'type': 'plain_text',
                'text': 'Release notes',
                'emoji': True,
            },
            'url': RELEASE_NOTES_URL,
            'action_id': 'button-action',
        },
    }
)
blocks.append({'type': 'divider'})

if BODY:
    blocks.append(
        {
            'type': 'section',
            'text': {'type': 'mrkdwn', 'text': BODY},
        }
    )
    blocks.append({'type': 'divider'})

if PREVIOUS_TAG:
    blocks.append(
        {
            'type': 'context',
            'elements': [
                {
                    'type': 'mrkdwn',
                    'text': f'Version *{TAG}*',
                },
                {
                    'type': 'mrkdwn',
                    'text': f'_Previously {PREVIOUS_TAG}_',
                }
            ],
        }
    )

if TAG and PREVIOUS_TAG and BINARY and PREVIOUS_BINARY:
    binary_size_mib = os.path.getsize(BINARY) / 1024 / 1024
    previous_binary_size_mib = os.path.getsize(PREVIOUS_BINARY) / 1024 / 1024
    blocks.append(
        {
            'type': 'context',
            'elements': [
                {
                    'type': 'mrkdwn',
                    'text': f'Binary size *{binary_size_mib:.2f} MiB*',
                },
                {
                    'type': 'mrkdwn',
                    'text': f'_Previously {previous_binary_size_mib:.2f} MiB_',
                },
            ],
        }
    )

summary = {'blocks': blocks}
print(json.dumps(summary))
